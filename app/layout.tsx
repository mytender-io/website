"use client";
import Navbar from "@/components/nav/nav";
import RiveGlowAnimation from "@/components/rive/RiveGlowAnimation";
import Contact from "@/components/section/contact";
import Footer from "@/components/section/footer";
import "./globals.css";
import Script from "next/script";
import { Suspense } from "react";
import Loading from "./loading";

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// const RiveGlowAnimation = dynamic(
//   () => import("@/components/rive/RiveGlowAnimation"),
//   {
//     ssr: false, // since it's canvas-based and client-only
//   }
// );

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" className="overflow-x-clip">
      <head>
        {/* Google tag (gtag.js) */}
        <Script async src="https://www.googletagmanager.com/gtag/js?id=G-4SMXB46H7Y" />
        <Script id="google-analytics" strategy="afterInteractive">
          {`
            window.dataLayer = window.dataLayer || [];
            function gtag(){dataLayer.push(arguments);}
            gtag('js', new Date());
            gtag('config', 'G-4SMXB46H7Y');
          `}
        </Script>
        <meta charSet="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>My Tender</title>
        <meta name="description" content="My Tender" />
        <link rel="icon" href="/favicon/favicon.ico" />
        <link rel="icon" href="/favicon/favicon-16x16.png" />
        <link rel="icon" href="/favicon/favicon-32x32.png" />
        <link rel="icon" href="/favicon/android-chrome-192x192.png" />
        <link rel="icon" href="/favicon/android-chrome-512x512.png" />
        <link rel="icon" href="/favicon/apple-touch-icon.png" />
        <link rel="manifest" href="/favicon/site.webmanifest" />
      </head>
      <body
        suppressHydrationWarning
        className={`antialiased w-screen p-0`}
        style={{
          overflow: "clip",
        }}
      >
        <Suspense fallback={<Loading />}>
          <div className="h-fit w-full relative">
            <RiveGlowAnimation />
            {/* <div className="absolute w-full overflow-hidden h-screen top-[-30%] md:top-[-20%] lg:top-[0%] xl:top-[0] z-[-1]">
          <RiveComponent className="w-full h-full scale-150 lg:scale-200 blur-xl mt-40 bg-transparent" />
        </div> */}
            <Navbar />
            <div className="bg-gradient-to-t from-[#fff] via-[#fff] via-[80%] to-[#fff0] w-full h-[150vh] absolute top-[-2%] md:top-[3%] left-0 -z-10" />
            {children}
            <Contact />
            <Footer />
          </div>
        </Suspense>
        <Script
          id="hs-script-loader"
          src="//js-eu1.hs-scripts.com/144606585.js"
          strategy="afterInteractive"
          async
          defer
        />
        <Script id="posthog-script" strategy="afterInteractive">
          {`
            !function(t,e){var o,n,p,r;e.__SV||(window.posthog=e,e._i=[],e.init=function(i,s,a){function g(t,e){var o=e.split(".");2==o.length&&(t=t[o[0]],e=o[1]),t[e]=function(){t.push([e].concat(Array.prototype.slice.call(arguments,0)))}}(p=t.createElement("script")).type="text/javascript",p.crossOrigin="anonymous",p.async=!0,p.src=s.api_host.replace(".i.posthog.com","-assets.i.posthog.com")+"/static/array.js",(r=t.getElementsByTagName("script")[0]).parentNode.insertBefore(p,r);var u=e;for(void 0!==a?u=e[a]=[]:a="posthog",u.people=u.people||[],u.toString=function(t){var e="posthog";return"posthog"!==a&&(e+="."+a),t||(e+=" (stub)"),e},u.people.toString=function(){return u.toString(1)+".people (stub)"},o="init capture register register_once register_for_session unregister unregister_for_session getFeatureFlag getFeatureFlagPayload isFeatureEnabled reloadFeatureFlags updateEarlyAccessFeatureEnrollment getEarlyAccessFeatures on onFeatureFlags onSurveysLoaded onSessionId getSurveys getActiveMatchingSurveys renderSurvey canRenderSurvey canRenderSurveyAsync identify setPersonProperties group resetGroups setPersonPropertiesForFlags resetPersonPropertiesForFlags setGroupPropertiesForFlags resetGroupPropertiesForFlags reset get_distinct_id getGroups get_session_id get_session_replay_url alias set_config startSessionRecording stopSessionRecording sessionRecordingStarted captureException loadToolbar get_property getSessionProperty createPersonProfile opt_in_capturing opt_out_capturing has_opted_in_capturing has_opted_out_capturing clear_opt_in_out_capturing debug getPageViewId captureTraceFeedback captureTraceMetric".split(" "),n=0;n<o.length;n++)g(u,o[n]);e._i.push([i,s,a])},e.__SV=1)}(document,window.posthog||[]);
            posthog.init('phc_NW4AHRlSLVTQ7A275eFMw5Bez4N5AbI4DAfDkxBNdI3', {
                api_host: 'https://eu.i.posthog.com',
                person_profiles: 'identified_only',
            })
          `}
        </Script>
      </body>
    </html>
  );
}
